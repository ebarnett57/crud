{"version":3,"sources":["components/Users.js","components/AddUser.js","components/App.js","serviceWorker.js","index.js"],"names":["Users","handleUpdate","props","updateUser","indexNum","firstName","value","lastName","age","email","gender","this","allUsers","pressEditBtn","pressDelete","usersList","map","user","index","isEditing","key","type","ref","val","required","defaultValue","onClick","className","Component","AddUser","state","handleSubmit","e","preventDefault","addUser","target","reset","updateState","setState","name","onSubmit","autoComplete","placeholder","onChange","App","users","newUser","i","filter","u","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfa1dc29.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Users extends Component{\r\n\r\n    // call updateUser (App.js)\r\n    handleUpdate = () => {\r\n        this.props.updateUser(this.indexNum, this.firstName.value, this.lastName.value, this.age.value, this.email.value, this.gender.value);\r\n    }\r\n\r\n    render(){\r\n\r\n        const {allUsers, pressEditBtn, pressDelete} = this.props;\r\n\r\n        const usersList = allUsers.map((user, index) => {\r\n\r\n            return user.isEditing === true ? (\r\n                \r\n                <tr  key={index}>\r\n                    <td><input type=\"text\" ref={(val) => {this.firstName = val}} required defaultValue={user.firstName}/></td>\r\n                    <td><input type=\"text\" ref={(val) => {this.lastName = val}} required defaultValue={user.lastName}/></td>\r\n                    <td><input type=\"number\" ref={(val) => {this.age = val}} required defaultValue={user.age}/></td>\r\n                    <td><input type=\"email\" ref={(val) => {this.email = val}} required defaultValue={user.email}/></td>\r\n                    <td><input type=\"text\" ref={(val) => {this.gender = val}} required defaultValue={user.gender}/></td>\r\n                    <td>\r\n                    <input type=\"button\" value=\"Update\" onClick={this.handleUpdate} ref={() => {this.indexNum = index}} className=\"btn green\"/>\r\n                    </td>\r\n                </tr>  \r\n\r\n            ) : (\r\n\r\n                <tr  key={index}>\r\n                    <td>{user.firstName}</td>\r\n                    <td>{user.lastName}</td>\r\n                    <td>{user.age}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.gender}</td>\r\n                    <td><button className=\"btn white black-text\" onClick={() => pressEditBtn(index)}>Edit</button>  |  <button className=\"btn red\" onClick={()=>pressDelete(index)}>Delete</button></td>\r\n                </tr>\r\n\r\n            );\r\n        });\r\n\r\n        return(\r\n            <table className=\"striped\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Age</th>\r\n                    <th>Email</th>\r\n                    <th>Gender</th>\r\n                    <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {usersList}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React,{ Component } from 'react';\r\n\r\nclass AddUser extends Component{\r\n\r\n    state = {\r\n        firstName:null,\r\n        lastName:null,\r\n        age:null,\r\n        email:null,\r\n        gender:null,\r\n        isEditing:false\r\n    }\r\n    //call addUser (App.js)\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addUser(this.state);  \r\n        e.target.reset();\r\n\r\n    }\r\n    // update state\r\n    updateState = (e) => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field col s2\">\r\n                        <input name=\"firstName\" autoComplete=\"off\" placeholder=\"Enter your first name\" required type=\"text\" onChange={ this.updateState} />\r\n                    </div>\r\n                    <div className=\"input-field col s2\">\r\n                        <input name=\"lastName\" autoComplete=\"off\" placeholder=\"Enter your last name\" required type=\"text\" onChange={ this.updateState} />\r\n                    </div>\r\n                    <div className=\"input-field col s2\">\r\n                        <input name=\"age\" autoComplete=\"off\" type=\"number\" required placeholder=\"Enter your age\" onChange={ this.updateState } />\r\n                    </div>\r\n                    <div className=\"input-field col s2\">\r\n                        <input name=\"email\" autoComplete=\"off\" placeholder=\"Enter your email\" required type=\"email\" onChange={ this.updateState} />\r\n                    </div>\r\n                    <div className=\"input-field col s2\">\r\n                        <input name=\"gender\" autoComplete=\"off\" placeholder=\"Enter your gender\" required type=\"text\" onChange={ this.updateState} />\r\n                    </div>\r\n                    <div className=\"input-field col s2\">\r\n                        <input type=\"submit\" value=\"Add +\" className=\"btn blue\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddUser;","import React, { Component } from 'react';\r\nimport Users from './Users';\r\nimport AddUser from './AddUser';\r\n\r\n\r\nclass App extends Component{\r\n\r\n    // Default dummy data\r\n    state = {\r\n\r\n        users:[\r\n          {firstName:\"Travis\", lastName: \"Jackson\", age:18, email: \"travis@jackson.com\", gender:\"male\", isEditing:false},\r\n          {firstName:\"Linda\", lastName:\"Moorhouse\", age:22, email:\"linda@moorhouse.com\", gender:\"female\", isEditing:false},\r\n          {firstName:\"Jeffrey\",lastName:\"Delgado\", age:21, email:\"Jeffrey@delgado.com\",gender:\"male\", isEditing:false},\r\n          {firstName:\"Travis\", lastName: \"Jackson\", age:18, email: \"travis@jackson.com\", gender:\"male\", isEditing:false},\r\n          {firstName:\"Linda\", lastName:\"Moorhouse\", age:22, email:\"linda@moorhouse.com\", gender:\"female\", isEditing:false},\r\n          {firstName:\"Jeffrey\",lastName:\"Delgado\", age:21, email:\"Jeffrey@delgado.com\",gender:\"male\", isEditing:false},\r\n          {firstName:\"Travis\", lastName: \"Jackson\", age:18, email: \"travis@jackson.com\", gender:\"male\", isEditing:false},\r\n          {firstName:\"Linda\", lastName:\"Moorhouse\", age:22, email:\"linda@moorhouse.com\", gender:\"female\", isEditing:false},\r\n          {firstName:\"Jeffrey\",lastName:\"Delgado\", age:21, email:\"Jeffrey@delgado.com\",gender:\"male\", isEditing:false},\r\n          {firstName:\"Jeffrey\",lastName:\"Delgado\", age:21, email:\"Jeffrey@delgado.com\",gender:\"male\", isEditing:false},\r\n        ]\r\n      }\r\n\r\n      // (newUser) is received from AddUser.js\r\n      addUser = (newUser) => {\r\n            let users = [...this.state.users, newUser];\r\n            this.setState({\r\n                users\r\n            });     \r\n      }\r\n\r\n      // when press edit button\r\n      // (i) is received from Users.js\r\n      pressEditBtn = (i) => {\r\n        let users = this.state.users;\r\n        users[i].isEditing = true;\r\n        this.setState({\r\n            users\r\n        });\r\n      }\r\n\r\n      // (i, name, age) is received from Users.js\r\n      updateUser = (i, firstName, lastName, age, email,gender) => {\r\n        let users = this.state.users;\r\n        users[i].firstName = firstName;\r\n        users[i].lastName = lastName;\r\n        users[i].age = age;\r\n        users[i].email = email;\r\n        users[i].gender = gender;      \r\n        users[i].isEditing = false;\r\n\r\n        this.setState({\r\n            users\r\n        });\r\n\r\n      }\r\n      // (i) is received from Users.js\r\n      pressDelete = (i) => {\r\n        let users = this.state.users.filter((u,index)=>{\r\n            return index !== i;\r\n        });\r\n        this.setState({\r\n            users\r\n        });\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>CRUD with React CLI</h1>\r\n                <Users allUsers={this.state.users} pressEditBtn={this.pressEditBtn} updateUser={this.updateUser} pressDelete={this.pressDelete} />\r\n                <AddUser addUser={this.addUser}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}